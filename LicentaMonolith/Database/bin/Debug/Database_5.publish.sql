/*
Deployment script for LicentaMonolith

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LicentaMonolith"
:setvar DefaultFilePrefix "LicentaMonolith"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Product].[Inventory] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Product])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key 74eb7680-7a6e-487a-a0bc-a4882653ab24 is skipped, element [dbo].[Inventory].[Row] (SqlSimpleColumn) will not be renamed to Row_Version';


GO
PRINT N'Dropping unnamed constraint on [dbo].[Product]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF__tmp_ms_xx__Inven__1273C1CD];


GO
PRINT N'Altering [dbo].[Product]...';


GO
ALTER TABLE [dbo].[Product] DROP COLUMN [Inventory];


GO
ALTER TABLE [dbo].[Product]
    ADD [ImageUrl] VARCHAR (500) NULL;


GO
PRINT N'Creating [dbo].[Inventory]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[Inventory] (
    [Id]              INT        NOT NULL,
    [ProductId]       INT        NOT NULL,
    [Row_Version]     NCHAR (10) NOT NULL,
    [Date_Deleted]    NCHAR (10) NULL,
    [WarehouseNumber] INT        NOT NULL,
    [AreaCode]        INT        NOT NULL,
    [ShelveNumber]    INT        NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating unnamed constraint on [dbo].[Inventory]...';


GO
ALTER TABLE [dbo].[Inventory]
    ADD DEFAULT 1 FOR [Row_Version];


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '74eb7680-7a6e-487a-a0bc-a4882653ab24')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('74eb7680-7a6e-487a-a0bc-a4882653ab24')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

SET IDENTITY_INSERT dbo.Category ON
GO

MERGE INTO dbo.Category AS Target  
USING (VALUES (0,'Uncategorised',0))
       AS Source (CategoryId, Name, Visible)  
ON Target.CategoryId = Source.CategoryId  
WHEN MATCHED THEN  
	UPDATE SET 
			Name = Source.Name, 
			Visible = Source.Visible 
WHEN NOT MATCHED BY TARGET THEN  
	INSERT (CategoryId, Name, Visible) VALUES (CategoryId, Name, Visible);
GO

SET IDENTITY_INSERT dbo.Category OFF
GO

GO
PRINT N'Update complete.';


GO
