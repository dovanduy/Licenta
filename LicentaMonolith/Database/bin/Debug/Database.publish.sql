/*
Deployment script for LicentaMonolith

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LicentaMonolith"
:setvar DefaultFilePrefix "LicentaMonolith"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Product].[CategoryId] on table [dbo].[Product] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[Product].[Name] on table [dbo].[Product] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column [dbo].[Product].[Price] on table [dbo].[Product] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Product])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Starting rebuilding table [dbo].[Product]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Product] (
    [ProductId]    INT            IDENTITY (1, 1) NOT NULL,
    [Name]         VARCHAR (400)  NOT NULL,
    [Description]  VARCHAR (5000) NULL,
    [CategoryId]   INT            NOT NULL,
    [Row_Version]  INT            DEFAULT 1 NOT NULL,
    [Date_Deleted] DATE           NULL,
    [Price]        MONEY          NOT NULL,
    [Inventory]    INT            DEFAULT 0 NOT NULL,
    PRIMARY KEY CLUSTERED ([ProductId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Product])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Product] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Product] ([ProductId])
        SELECT   [ProductId]
        FROM     [dbo].[Product]
        ORDER BY [ProductId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Product] OFF;
    END

DROP TABLE [dbo].[Product];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Product]', N'Product';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[AditionalDetails]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[AditionalDetails] (
    [AditionalDetailId] INT            IDENTITY (1, 1) NOT NULL,
    [ProductId]         INT            NOT NULL,
    [Name]              VARCHAR (50)   NOT NULL,
    [Text]              VARCHAR (5000) NOT NULL,
    [Date_Deleted]      DATE           NULL,
    PRIMARY KEY CLUSTERED ([AditionalDetailId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Category]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[Category] (
    [CategoryId]   INT          IDENTITY (1, 1) NOT NULL,
    [Name]         VARCHAR (50) NOT NULL,
    [Visible]      BIT          NOT NULL,
    [Row_Version]  INT          NOT NULL,
    [Date_Deleted] DATE         NULL,
    PRIMARY KEY CLUSTERED ([CategoryId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Reaction]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[Reaction] (
    [ReactionId] INT           IDENTITY (1, 1) NOT NULL,
    [Reaction]   BIT           NULL,
    [UserId]     VARCHAR (100) NOT NULL,
    [ReviewId]   INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([ReactionId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Review]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[Review] (
    [ReviewId]      INT            IDENTITY (1, 1) NOT NULL,
    [ProductId]     INT            NOT NULL,
    [UserId]        VARCHAR (100)  NOT NULL,
    [Rating]        TINYINT        NOT NULL,
    [Text]          VARCHAR (5000) NULL,
    [UserNickname]  VARCHAR (100)  NOT NULL,
    [Deletion_Date] DATE           NULL,
    PRIMARY KEY CLUSTERED ([ReviewId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Sale]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[Sale] (
    [SaleId]             INT            IDENTITY (1, 1) NOT NULL,
    [ProductId]          INT            NOT NULL,
    [Items]              INT            NOT NULL,
    [Price]              MONEY          NOT NULL,
    [SpecialOfferId]     INT            NULL,
    [PercentageDiscount] DECIMAL (4, 2) NULL,
    [UserId]             VARCHAR (500)  NOT NULL,
    [OrderId]            INT            NOT NULL,
    [StatusId]           INT            NOT NULL,
    [Date_Created]       DATE           NOT NULL,
    [Date_StatusChanged] DATE           NULL,
    PRIMARY KEY CLUSTERED ([SaleId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[SaleStatusLookup]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[SaleStatusLookup] (
    [SaleStatusId] INT          NOT NULL,
    [Name]         VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([SaleStatusId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating unnamed constraint on [dbo].[Category]...';


GO
ALTER TABLE [dbo].[Category]
    ADD DEFAULT 0 FOR [Visible];


GO
PRINT N'Creating unnamed constraint on [dbo].[Category]...';


GO
ALTER TABLE [dbo].[Category]
    ADD DEFAULT 1 FOR [Row_Version];


GO
PRINT N'Creating [dbo].[DF_Sale_StatusId]...';


GO
ALTER TABLE [dbo].[Sale]
    ADD CONSTRAINT [DF_Sale_StatusId] DEFAULT ((1)) FOR [StatusId];


GO
PRINT N'Creating [dbo].[DF_Sale_Date_Created]...';


GO
ALTER TABLE [dbo].[Sale]
    ADD CONSTRAINT [DF_Sale_Date_Created] DEFAULT (getdate()) FOR [Date_Created];


GO
PRINT N'Creating [dbo].[FK_Product_Category]...';


GO
ALTER TABLE [dbo].[Product] WITH NOCHECK
    ADD CONSTRAINT [FK_Product_Category] FOREIGN KEY ([CategoryId]) REFERENCES [dbo].[Category] ([CategoryId]);


GO
PRINT N'Creating [dbo].[FK_AditionalDetails_Products]...';


GO
ALTER TABLE [dbo].[AditionalDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_AditionalDetails_Products] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([ProductId]);


GO
PRINT N'Creating [dbo].[FK_Reaction_Review]...';


GO
ALTER TABLE [dbo].[Reaction] WITH NOCHECK
    ADD CONSTRAINT [FK_Reaction_Review] FOREIGN KEY ([ReviewId]) REFERENCES [dbo].[Review] ([ReviewId]);


GO
PRINT N'Creating [dbo].[FK_Review_Product]...';


GO
ALTER TABLE [dbo].[Review] WITH NOCHECK
    ADD CONSTRAINT [FK_Review_Product] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([ProductId]);


GO
PRINT N'Creating [dbo].[FK_Sale_SaleStatus]...';


GO
ALTER TABLE [dbo].[Sale] WITH NOCHECK
    ADD CONSTRAINT [FK_Sale_SaleStatus] FOREIGN KEY ([StatusId]) REFERENCES [dbo].[SaleStatusLookup] ([SaleStatusId]);


GO
PRINT N'Creating [dbo].[FK_Sale_Product]...';


GO
ALTER TABLE [dbo].[Sale] WITH NOCHECK
    ADD CONSTRAINT [FK_Sale_Product] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Product] ([ProductId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Product] WITH CHECK CHECK CONSTRAINT [FK_Product_Category];

ALTER TABLE [dbo].[AditionalDetails] WITH CHECK CHECK CONSTRAINT [FK_AditionalDetails_Products];

ALTER TABLE [dbo].[Reaction] WITH CHECK CHECK CONSTRAINT [FK_Reaction_Review];

ALTER TABLE [dbo].[Review] WITH CHECK CHECK CONSTRAINT [FK_Review_Product];

ALTER TABLE [dbo].[Sale] WITH CHECK CHECK CONSTRAINT [FK_Sale_SaleStatus];

ALTER TABLE [dbo].[Sale] WITH CHECK CHECK CONSTRAINT [FK_Sale_Product];


GO
PRINT N'Update complete.';


GO
