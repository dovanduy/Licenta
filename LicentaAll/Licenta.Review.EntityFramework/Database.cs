

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Licenta.Review.EntityFramework\App.config"
//     Connection String Name: "Database"
//     Connection String:      "Data Source=STEFAN-LT\SQLEXPRESS;Initial Catalog=LicentaReview;Integrated Security=True"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Express Edition (64-bit)
// Database Engine Edition: Express

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Licenta.Review.EntityFramework
{
    using Newtonsoft.Json;

    #region Unit of work

    public interface IReviewDbContext : Licenta.EntityFramework.UnitOfWork.Interfaces.IDbContext
    {
        System.Data.Entity.DbSet<ProductRating> ProductRatings { get; set; } // ProductRatings
        System.Data.Entity.DbSet<Reaction> Reactions { get; set; } // Reaction
        System.Data.Entity.DbSet<Review> Reviews { get; set; } // Review
        System.Data.Entity.DbSet<ReviewList> ReviewLists { get; set; } // ReviewList

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ReviewDbContext : System.Data.Entity.DbContext, IReviewDbContext
    {
        public System.Data.Entity.DbSet<ProductRating> ProductRatings { get; set; } // ProductRatings
        public System.Data.Entity.DbSet<Reaction> Reactions { get; set; } // Reaction
        public System.Data.Entity.DbSet<Review> Reviews { get; set; } // Review
        public System.Data.Entity.DbSet<ReviewList> ReviewLists { get; set; } // ReviewList

        static ReviewDbContext()
        {
            System.Data.Entity.Database.SetInitializer<ReviewDbContext>(null);
        }

        public ReviewDbContext()
            : base("Name=Database")
        {
        }

        public ReviewDbContext(string connectionString)
            : base(connectionString)
        {
        }

        public ReviewDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public ReviewDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public ReviewDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new ProductRatingConfiguration());
            modelBuilder.Configurations.Add(new ReactionConfiguration());
            modelBuilder.Configurations.Add(new ReviewConfiguration());
            modelBuilder.Configurations.Add(new ReviewListConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new ProductRatingConfiguration(schema));
            modelBuilder.Configurations.Add(new ReactionConfiguration(schema));
            modelBuilder.Configurations.Add(new ReviewConfiguration(schema));
            modelBuilder.Configurations.Add(new ReviewListConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region POCO classes

    // ProductRatings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ProductRating
    {
        public int ProductId { get; set; } // ProductId
        public double? AverageRating { get; set; } // AverageRating
    }

    // Reaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Reaction: Licenta.EntityFramework.IMaintainableEntity
    {
        public int Id { get; set; } // Id (Primary key)
        public bool? Reaction_ { get; set; } // Reaction
        public string UserId { get; set; } // UserId (length: 100)
        public int ReviewId { get; set; } // ReviewId
        public System.DateTime? DateDeleted { get; set; } // Date_Deleted
        public int RowVersion { get; set; } // Row_Version

        // Foreign keys
        [JsonIgnore]
        public virtual Review Review { get; set; } // FK_Reaction_Review

        public Reaction()
        {
            RowVersion = 1;
        }
    }

    // Review
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Review: Licenta.EntityFramework.IMaintainableEntity
    {
        public int Id { get; set; } // Id (Primary key)
        public int ProductId { get; set; } // ProductId
        public string UserId { get; set; } // UserId (length: 100)
        public byte Rating { get; set; } // Rating
        public string Text { get; set; } // Text (length: 5000)
        public bool UserBoughtProduct { get; set; } // UserBoughtProduct
        public string UserNickname { get; set; } // UserNickname (length: 100)
        public bool ProductDeleted { get; set; } // ProductDeleted
        public System.DateTime? DateDeleted { get; set; } // Date_Deleted
        public int RowVersion { get; set; } // Row_Version

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Reaction> Reactions { get; set; } // Reaction.FK_Reaction_Review

        public Review()
        {
            ProductDeleted = false;
            RowVersion = 1;
            Reactions = new System.Collections.Generic.List<Reaction>();
        }
    }

    // ReviewList
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ReviewList
    {
        public byte Rating { get; set; } // Rating
        public string Text { get; set; } // Text (length: 5000)
        public int ProductId { get; set; } // ProductId
        public int ReviewId { get; set; } // ReviewId
        public string UserNickname { get; set; } // UserNickname (length: 100)
        public bool UserBoughtProduct { get; set; } // UserBoughtProduct
        public int? PositiveReactions { get; set; } // PositiveReactions
        public int? NegativeReactions { get; set; } // NegativeReactions
    }

    #endregion

    #region POCO Configuration

    // ProductRatings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ProductRatingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProductRating>
    {
        public ProductRatingConfiguration()
            : this("dbo")
        {
        }

        public ProductRatingConfiguration(string schema)
        {
            ToTable("ProductRatings", schema);
            HasKey(x => x.ProductId);

            Property(x => x.ProductId).HasColumnName(@"ProductId").IsRequired().HasColumnType("int");
            Property(x => x.AverageRating).HasColumnName(@"AverageRating").IsOptional().HasColumnType("float");
        }
    }

    // Reaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ReactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Reaction>
    {
        public ReactionConfiguration()
            : this("dbo")
        {
        }

        public ReactionConfiguration(string schema)
        {
            ToTable("Reaction", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Reaction_).HasColumnName(@"Reaction").IsOptional().HasColumnType("bit");
            Property(x => x.UserId).HasColumnName(@"UserId").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.ReviewId).HasColumnName(@"ReviewId").IsRequired().HasColumnType("int");
            Property(x => x.DateDeleted).HasColumnName(@"Date_Deleted").IsOptional().HasColumnType("date");
            Property(x => x.RowVersion).HasColumnName(@"Row_Version").IsRequired().HasColumnType("int");

            // Foreign keys
            HasRequired(a => a.Review).WithMany(b => b.Reactions).HasForeignKey(c => c.ReviewId).WillCascadeOnDelete(false); // FK_Reaction_Review
        }
    }

    // Review
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ReviewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Review>
    {
        public ReviewConfiguration()
            : this("dbo")
        {
        }

        public ReviewConfiguration(string schema)
        {
            ToTable("Review", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProductId).HasColumnName(@"ProductId").IsRequired().HasColumnType("int");
            Property(x => x.UserId).HasColumnName(@"UserId").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.Rating).HasColumnName(@"Rating").IsRequired().HasColumnType("tinyint");
            Property(x => x.Text).HasColumnName(@"Text").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5000);
            Property(x => x.UserBoughtProduct).HasColumnName(@"UserBoughtProduct").IsRequired().HasColumnType("bit");
            Property(x => x.UserNickname).HasColumnName(@"UserNickname").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.ProductDeleted).HasColumnName(@"ProductDeleted").IsRequired().HasColumnType("bit");
            Property(x => x.DateDeleted).HasColumnName(@"Date_Deleted").IsOptional().HasColumnType("date");
            Property(x => x.RowVersion).HasColumnName(@"Row_Version").IsRequired().HasColumnType("int");
        }
    }

    // ReviewList
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ReviewListConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ReviewList>
    {
        public ReviewListConfiguration()
            : this("dbo")
        {
        }

        public ReviewListConfiguration(string schema)
        {
            ToTable("ReviewList", schema);
            HasKey(x => new { x.Rating, x.ProductId, x.ReviewId, x.UserNickname, x.UserBoughtProduct });

            Property(x => x.Rating).HasColumnName(@"Rating").IsRequired().HasColumnType("tinyint");
            Property(x => x.Text).HasColumnName(@"Text").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5000);
            Property(x => x.ProductId).HasColumnName(@"ProductId").IsRequired().HasColumnType("int");
            Property(x => x.ReviewId).HasColumnName(@"ReviewId").IsRequired().HasColumnType("int");
            Property(x => x.UserNickname).HasColumnName(@"UserNickname").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(100);
            Property(x => x.UserBoughtProduct).HasColumnName(@"UserBoughtProduct").IsRequired().HasColumnType("bit");
            Property(x => x.PositiveReactions).HasColumnName(@"PositiveReactions").IsOptional().HasColumnType("int");
            Property(x => x.NegativeReactions).HasColumnName(@"NegativeReactions").IsOptional().HasColumnType("int");
        }
    }

    #endregion

}
// </auto-generated>

