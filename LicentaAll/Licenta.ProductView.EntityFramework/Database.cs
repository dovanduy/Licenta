

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Configuration file:     "Licenta.ProductView.EntityFramework\App.config"
//     Connection String Name: "Database"
//     Connection String:      "Data Source=STEFAN-LT\SQLEXPRESS;Initial Catalog=LicentaProductView;Integrated Security=True"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Express Edition (64-bit)
// Database Engine Edition: Express

// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Licenta.ProductView.EntityFramework
{
    using Newtonsoft.Json;

    #region Unit of work

    public interface IProductViewDbContext : Licenta.EntityFramework.UnitOfWork.Interfaces.IDbContext
    {
        System.Data.Entity.DbSet<AditionalDetail> AditionalDetails { get; set; } // AditionalDetails
        System.Data.Entity.DbSet<Category> Categories { get; set; } // Category
        System.Data.Entity.DbSet<Product> Products { get; set; } // Products
        System.Data.Entity.DbSet<ProductView> ProductViews { get; set; } // ProductView

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ProductViewDbContext : System.Data.Entity.DbContext, IProductViewDbContext
    {
        public System.Data.Entity.DbSet<AditionalDetail> AditionalDetails { get; set; } // AditionalDetails
        public System.Data.Entity.DbSet<Category> Categories { get; set; } // Category
        public System.Data.Entity.DbSet<Product> Products { get; set; } // Products
        public System.Data.Entity.DbSet<ProductView> ProductViews { get; set; } // ProductView

        static ProductViewDbContext()
        {
            System.Data.Entity.Database.SetInitializer<ProductViewDbContext>(null);
        }

        public ProductViewDbContext()
            : base("Name=Database")
        {
        }

        public ProductViewDbContext(string connectionString)
            : base(connectionString)
        {
        }

        public ProductViewDbContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public ProductViewDbContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public ProductViewDbContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AditionalDetailConfiguration());
            modelBuilder.Configurations.Add(new CategoryConfiguration());
            modelBuilder.Configurations.Add(new ProductConfiguration());
            modelBuilder.Configurations.Add(new ProductViewConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AditionalDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new CategoryConfiguration(schema));
            modelBuilder.Configurations.Add(new ProductConfiguration(schema));
            modelBuilder.Configurations.Add(new ProductViewConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region POCO classes

    // AditionalDetails
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class AditionalDetail: Licenta.EntityFramework.IMaintainableEntity
    {
        public int Id { get; set; } // Id (Primary key)
        public int ProductId { get; set; } // ProductId
        public string Name { get; set; } // Name (length: 50)
        public string Text { get; set; } // Text (length: 5000)
        public int RowVersion { get; set; } // Row_Version
        public System.DateTime? DateDeleted { get; set; } // Date_Deleted

        // Foreign keys
        [JsonIgnore]
        public virtual Product Product { get; set; } // FK_AditionalDetails_Products

        public AditionalDetail()
        {
            RowVersion = 1;
        }
    }

    // Category
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Category: Licenta.EntityFramework.IMaintainableEntity
    {
        public int Id { get; set; } // Id (Primary key)
        public bool Visible { get; set; } // Visible
        public string Name { get; set; } // Name (length: 50)
        public int RowVersion { get; set; } // Row_Version
        public System.DateTime? DateDeleted { get; set; } // Date_Deleted

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<Product> Products { get; set; } // Products.FK_Product_Category

        public Category()
        {
            RowVersion = 0;
            Products = new System.Collections.Generic.List<Product>();
        }
    }

    // Products
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class Product: Licenta.EntityFramework.IMaintainableEntity
    {
        public int Id { get; set; } // Id (Primary key)
        public string Name { get; set; } // Name (length: 400)
        public string Description { get; set; } // Description (length: 5000)
        public int CategoryId { get; set; } // CategoryId
        public int Inventory { get; set; } // Inventory
        public decimal? Price { get; set; } // Price
        public int RowVersion { get; set; } // Row_Version
        public decimal? Rating { get; set; } // Rating
        public System.DateTime? DateDeleted { get; set; } // Date_Deleted

        // Reverse navigation
        public virtual System.Collections.Generic.ICollection<AditionalDetail> AditionalDetails { get; set; } // AditionalDetails.FK_AditionalDetails_Products

        // Foreign keys
        [JsonIgnore]
        public virtual Category Category { get; set; } // FK_Product_Category

        public Product()
        {
            Inventory = 0;
            RowVersion = 1;
            AditionalDetails = new System.Collections.Generic.List<AditionalDetail>();
        }
    }

    // ProductView
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ProductView
    {
        public int Id { get; set; } // Id
        public string Name { get; set; } // Name (length: 400)
        public string Description { get; set; } // Description (length: 5000)
        public decimal? Price { get; set; } // Price
        public bool? IsInStock { get; set; } // IsInStock
        public int CategoryId { get; set; } // CategoryId
        public string CategoryName { get; set; } // CategoryName (length: 50)
        public decimal? Rating { get; set; } // Rating
    }

    #endregion

    #region POCO Configuration

    // AditionalDetails
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class AditionalDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<AditionalDetail>
    {
        public AditionalDetailConfiguration()
            : this("dbo")
        {
        }

        public AditionalDetailConfiguration(string schema)
        {
            ToTable("AditionalDetails", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProductId).HasColumnName(@"ProductId").IsRequired().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.Text).HasColumnName(@"Text").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5000);
            Property(x => x.RowVersion).HasColumnName(@"Row_Version").IsRequired().HasColumnType("int");
            Property(x => x.DateDeleted).HasColumnName(@"Date_Deleted").IsOptional().HasColumnType("date");

            // Foreign keys
            HasRequired(a => a.Product).WithMany(b => b.AditionalDetails).HasForeignKey(c => c.ProductId).WillCascadeOnDelete(false); // FK_AditionalDetails_Products
        }
    }

    // Category
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class CategoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Category>
    {
        public CategoryConfiguration()
            : this("dbo")
        {
        }

        public CategoryConfiguration(string schema)
        {
            ToTable("Category", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Visible).HasColumnName(@"Visible").IsRequired().HasColumnType("bit");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.RowVersion).HasColumnName(@"Row_Version").IsRequired().HasColumnType("int");
            Property(x => x.DateDeleted).HasColumnName(@"Date_Deleted").IsOptional().HasColumnType("date");
        }
    }

    // Products
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ProductConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Product>
    {
        public ProductConfiguration()
            : this("dbo")
        {
        }

        public ProductConfiguration(string schema)
        {
            ToTable("Products", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(400);
            Property(x => x.Description).HasColumnName(@"Description").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5000);
            Property(x => x.CategoryId).HasColumnName(@"CategoryId").IsRequired().HasColumnType("int");
            Property(x => x.Inventory).HasColumnName(@"Inventory").IsRequired().HasColumnType("int");
            Property(x => x.Price).HasColumnName(@"Price").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.RowVersion).HasColumnName(@"Row_Version").IsRequired().HasColumnType("int");
            Property(x => x.Rating).HasColumnName(@"Rating").IsOptional().HasColumnType("decimal").HasPrecision(4,2);
            Property(x => x.DateDeleted).HasColumnName(@"Date_Deleted").IsOptional().HasColumnType("date");

            // Foreign keys
            HasRequired(a => a.Category).WithMany(b => b.Products).HasForeignKey(c => c.CategoryId).WillCascadeOnDelete(false); // FK_Product_Category
        }
    }

    // ProductView
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.24.0.0")]
    public class ProductViewConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProductView>
    {
        public ProductViewConfiguration()
            : this("dbo")
        {
        }

        public ProductViewConfiguration(string schema)
        {
            ToTable("ProductView", schema);
            HasKey(x => new { x.Id, x.Name, x.CategoryId, x.CategoryName });

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int");
            Property(x => x.Name).HasColumnName(@"Name").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(400);
            Property(x => x.Description).HasColumnName(@"Description").IsOptional().IsUnicode(false).HasColumnType("varchar").HasMaxLength(5000);
            Property(x => x.Price).HasColumnName(@"Price").IsOptional().HasColumnType("money").HasPrecision(19,4);
            Property(x => x.IsInStock).HasColumnName(@"IsInStock").IsOptional().HasColumnType("bit");
            Property(x => x.CategoryId).HasColumnName(@"CategoryId").IsRequired().HasColumnType("int");
            Property(x => x.CategoryName).HasColumnName(@"CategoryName").IsRequired().IsUnicode(false).HasColumnType("varchar").HasMaxLength(50);
            Property(x => x.Rating).HasColumnName(@"Rating").IsOptional().HasColumnType("decimal").HasPrecision(4,2);
        }
    }

    #endregion

}
// </auto-generated>

