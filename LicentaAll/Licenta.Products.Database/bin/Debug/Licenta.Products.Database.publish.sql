/*
Deployment script for LicentaProducts

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LicentaProducts"
:setvar DefaultFilePrefix "LicentaProducts"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column CategoryId on table [dbo].[Products] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column Name on table [dbo].[Products] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column Price on table [dbo].[Products] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column ProductId on table [dbo].[Products] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Products])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key 12266dc4-90e2-48d8-9c9d-19037d203ab4 is skipped, element [dbo].[Products].[ID] (SqlSimpleColumn) will not be renamed to Id';


GO
PRINT N'The following operation was generated from a refactoring log file d7e89b17-591b-454e-a743-78c574505bb9';

PRINT N'Rename [dbo].[Products].[ID] to ProductId';


GO
EXECUTE sp_rename @objname = N'[dbo].[Products].[ID]', @newname = N'ProductId', @objtype = N'COLUMN';


GO
PRINT N'Rename refactoring operation with key f2dd20d0-6dde-4113-9a22-7e2e0f603b0f is skipped, element [dbo].[Categories].[Id] (SqlSimpleColumn) will not be renamed to CategoryId';


GO
PRINT N'Rename refactoring operation with key 46b6233f-8244-4764-96cd-2cf316eee298, 3b3e5949-a251-4dec-8569-05e193e2b0ca is skipped, element [dbo].[Products].[NumberOfItems] (SqlSimpleColumn) will not be renamed to Inventory';


GO
PRINT N'Rename refactoring operation with key 30cb3299-492e-4433-ab1a-eaf81a6f2e3c is skipped, element [dbo].[Inventory].[Id] (SqlSimpleColumn) will not be renamed to InventoryId';


GO
PRINT N'Rename refactoring operation with key 68aa8da4-7706-4db2-a362-51b6d81baa0f is skipped, element [dbo].[Inventory].[Product] (SqlSimpleColumn) will not be renamed to ProductId';


GO
PRINT N'Rename refactoring operation with key a47483fc-51d9-44ff-bd31-082706f5be4c is skipped, element [dbo].[AditionalDetails].[Id] (SqlSimpleColumn) will not be renamed to AditionalDetailId';


GO
PRINT N'Rename refactoring operation with key 42f624bc-b4a3-4d48-8767-f0a409fcfe46 is skipped, element [dbo].[AditionalDetails].[Description] (SqlSimpleColumn) will not be renamed to Text';


GO
PRINT N'Rename refactoring operation with key 5fc790e5-5561-42e7-afe4-2617defc7436, f3ac8992-50fd-4dc0-8da6-2b8b2bd3d879 is skipped, element [dbo].[Categories] (SqlTable) will not be renamed to [Category.Lookup]';


GO
PRINT N'Altering [dbo].[Products]...';


GO
ALTER TABLE [dbo].[Products] ALTER COLUMN [CategoryID] INT NOT NULL;

ALTER TABLE [dbo].[Products] ALTER COLUMN [Name] VARCHAR (400) NOT NULL;

ALTER TABLE [dbo].[Products] ALTER COLUMN [Price] MONEY NOT NULL;

ALTER TABLE [dbo].[Products] ALTER COLUMN [ProductId] INT NOT NULL;


GO
ALTER TABLE [dbo].[Products]
    ADD [Inventory] INT DEFAULT 0 NOT NULL;


GO
PRINT N'Creating [dbo].[PK_Products]...';


GO
ALTER TABLE [dbo].[Products]
    ADD CONSTRAINT [PK_Products] PRIMARY KEY CLUSTERED ([ProductId] ASC);


GO
PRINT N'Creating [dbo].[AditionalDetails]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[AditionalDetails] (
    [AditionalDetailId] INT            NOT NULL,
    [ProductId]         INT            NOT NULL,
    [Name]              VARCHAR (50)   NOT NULL,
    [Text]              VARCHAR (5000) NOT NULL,
    PRIMARY KEY CLUSTERED ([AditionalDetailId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Category.Lookup]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[Category.Lookup] (
    [CategoryId] INT          NOT NULL,
    [Name]       VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([CategoryId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[FK_AditionalDetails_Products]...';


GO
ALTER TABLE [dbo].[AditionalDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_AditionalDetails_Products] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Products] ([ProductId]);


GO
PRINT N'Creating [dbo].[FK_Product_Category]...';


GO
ALTER TABLE [dbo].[Products] WITH NOCHECK
    ADD CONSTRAINT [FK_Product_Category] FOREIGN KEY ([CategoryId]) REFERENCES [dbo].[Category.Lookup] ([CategoryId]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '12266dc4-90e2-48d8-9c9d-19037d203ab4')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('12266dc4-90e2-48d8-9c9d-19037d203ab4')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'd7e89b17-591b-454e-a743-78c574505bb9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('d7e89b17-591b-454e-a743-78c574505bb9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f2dd20d0-6dde-4113-9a22-7e2e0f603b0f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f2dd20d0-6dde-4113-9a22-7e2e0f603b0f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '46b6233f-8244-4764-96cd-2cf316eee298')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('46b6233f-8244-4764-96cd-2cf316eee298')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '30cb3299-492e-4433-ab1a-eaf81a6f2e3c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('30cb3299-492e-4433-ab1a-eaf81a6f2e3c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '68aa8da4-7706-4db2-a362-51b6d81baa0f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('68aa8da4-7706-4db2-a362-51b6d81baa0f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '3b3e5949-a251-4dec-8569-05e193e2b0ca')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('3b3e5949-a251-4dec-8569-05e193e2b0ca')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a47483fc-51d9-44ff-bd31-082706f5be4c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a47483fc-51d9-44ff-bd31-082706f5be4c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '42f624bc-b4a3-4d48-8767-f0a409fcfe46')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('42f624bc-b4a3-4d48-8767-f0a409fcfe46')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5fc790e5-5561-42e7-afe4-2617defc7436')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5fc790e5-5561-42e7-afe4-2617defc7436')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f3ac8992-50fd-4dc0-8da6-2b8b2bd3d879')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f3ac8992-50fd-4dc0-8da6-2b8b2bd3d879')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[AditionalDetails] WITH CHECK CHECK CONSTRAINT [FK_AditionalDetails_Products];

ALTER TABLE [dbo].[Products] WITH CHECK CHECK CONSTRAINT [FK_Product_Category];


GO
PRINT N'Update complete.';


GO
