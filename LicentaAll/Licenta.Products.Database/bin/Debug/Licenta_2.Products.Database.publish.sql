/*
Deployment script for LicentaProducts

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LicentaProducts"
:setvar DefaultFilePrefix "LicentaProducts"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Products]...';


GO
ALTER TABLE [dbo].[Products] DROP CONSTRAINT [DF__Products__Invent__0F975522];


GO
PRINT N'Dropping [dbo].[FK_AditionalDetails_Products]...';


GO
ALTER TABLE [dbo].[AditionalDetails] DROP CONSTRAINT [FK_AditionalDetails_Products];


GO
PRINT N'Dropping [dbo].[FK_Product_Category]...';


GO
ALTER TABLE [dbo].[Products] DROP CONSTRAINT [FK_Product_Category];


GO
PRINT N'Starting rebuilding table [dbo].[AditionalDetails]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AditionalDetails] (
    [AditionalDetailId] INT            IDENTITY (1, 1) NOT NULL,
    [ProductId]         INT            NOT NULL,
    [Name]              VARCHAR (50)   NOT NULL,
    [Text]              VARCHAR (5000) NOT NULL,
    PRIMARY KEY CLUSTERED ([AditionalDetailId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AditionalDetails])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AditionalDetails] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AditionalDetails] ([AditionalDetailId], [ProductId], [Name], [Text])
        SELECT   [AditionalDetailId],
                 [ProductId],
                 [Name],
                 [Text]
        FROM     [dbo].[AditionalDetails]
        ORDER BY [AditionalDetailId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AditionalDetails] OFF;
    END

DROP TABLE [dbo].[AditionalDetails];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AditionalDetails]', N'AditionalDetails';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Starting rebuilding table [dbo].[Products]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Products] (
    [ProductId]   INT            IDENTITY (1, 1) NOT NULL,
    [Name]        VARCHAR (400)  NOT NULL,
    [Description] VARCHAR (5000) NULL,
    [Price]       MONEY          NOT NULL,
    [CategoryId]  INT            NOT NULL,
    [Inventory]   INT            DEFAULT 0 NOT NULL,
    PRIMARY KEY CLUSTERED ([ProductId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Products])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Products] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Products] ([ProductId], [Name], [Description], [Price], [CategoryID], [Inventory])
        SELECT   [ProductId],
                 [Name],
                 [Description],
                 [Price],
                 [CategoryID],
                 [Inventory]
        FROM     [dbo].[Products]
        ORDER BY [ProductId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Products] OFF;
    END

DROP TABLE [dbo].[Products];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Products]', N'Products';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_AditionalDetails_Products]...';


GO
ALTER TABLE [dbo].[AditionalDetails] WITH NOCHECK
    ADD CONSTRAINT [FK_AditionalDetails_Products] FOREIGN KEY ([ProductId]) REFERENCES [dbo].[Products] ([ProductId]);


GO
PRINT N'Creating [dbo].[FK_Product_Category]...';


GO
ALTER TABLE [dbo].[Products] WITH NOCHECK
    ADD CONSTRAINT [FK_Product_Category] FOREIGN KEY ([CategoryId]) REFERENCES [dbo].[CategoryLookup] ([CategoryId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[AditionalDetails] WITH CHECK CHECK CONSTRAINT [FK_AditionalDetails_Products];

ALTER TABLE [dbo].[Products] WITH CHECK CHECK CONSTRAINT [FK_Product_Category];


GO
PRINT N'Update complete.';


GO
