/*
Deployment script for LicentaProductView

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "LicentaProductView"
:setvar DefaultFilePrefix "LicentaProductView"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping [dbo].[FK_Product_Category]...';


GO
ALTER TABLE [dbo].[Products] DROP CONSTRAINT [FK_Product_Category];


GO
PRINT N'Altering [dbo].[Products]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
ALTER TABLE [dbo].[Products]
    ADD [Row_Version] INT DEFAULT 1 NOT NULL;


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating [dbo].[Category]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
CREATE TABLE [dbo].[Category] (
    [CategoryId]  INT          NOT NULL,
    [Visible]     BIT          NOT NULL,
    [Name]        VARCHAR (50) NOT NULL,
    [Row_Version] INT          NOT NULL,
    PRIMARY KEY CLUSTERED ([CategoryId] ASC)
);


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
PRINT N'Creating unnamed constraint on [dbo].[Category]...';


GO
ALTER TABLE [dbo].[Category]
    ADD DEFAULT 0 FOR [Row_Version];


GO
PRINT N'Creating [dbo].[FK_Product_Category]...';


GO
ALTER TABLE [dbo].[Products] WITH NOCHECK
    ADD CONSTRAINT [FK_Product_Category] FOREIGN KEY ([CategoryId]) REFERENCES [dbo].[Category] ([CategoryId]);


GO
PRINT N'Altering [dbo].[ProductView]...';


GO
SET ANSI_NULLS, QUOTED_IDENTIFIER OFF;


GO
ALTER VIEW [dbo].[ProductView]
	AS SELECT
		p.ProductId,
		p.Name,
		p.Description,
		p.Price,
		IIF(p.Inventory>0,CAST(1 as bit),CAST(1 as bit)) as IsInStock,
		cl.CategoryId,
		cl.Name as CategoryName 
	FROM [Products] p
	INNER JOIN Category cl ON p.CategoryId = cl.CategoryId
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON;


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

SET IDENTITY_INSERT dbo.Category ON
GO

MERGE INTO dbo.Category AS Target  
USING (VALUES (0,'Uncategorised',0))
       AS Source (CategoryId, Name, Visible)  
ON Target.CategoryId = Source.CategoryId  
WHEN MATCHED THEN  
	UPDATE SET 
			Name = Source.Name, 
			Visible = Source.Visible 
WHEN NOT MATCHED BY TARGET THEN  
	INSERT (CategoryId, Name, Visible) VALUES (CategoryId, Name, Visible);
GO

SET IDENTITY_INSERT dbo.Category OFF
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Products] WITH CHECK CHECK CONSTRAINT [FK_Product_Category];


GO
PRINT N'Update complete.';


GO
